import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import table from '../../styles/Table.module.css';
import form from '../../styles/Form.module.css';
import Header from '../../components/Header';

function ManageTestPlansPage() {
    const [testPlans, setTestPlans] = useState([]);
    const [name, setName] = useState('');
    const [description, setDescription] = useState('');
    const [hoveredRow, setHoveredRow] = useState(null);
    const router = useRouter();

    useEffect(() => {
        fetch('/api/testplans', { credentials: 'include' })
            .then(response => response.json())
            .then(data => setTestPlans(data));
    }, []);

    const handleSubmit = async (event) => {
        event.preventDefault();
        const res = await fetch('/api/testplans', {
            method: 'POST',
            credentials: 'include',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ name, description }),
        });
        if (res.ok) {
            const newPlan = await res.json();
            setTestPlans([...testPlans, newPlan]);
            setName('');
            setDescription('');
        } else {
            alert('Failed to create test plan');
        }
    };

    const handleRowClick = (planId) => {
        router.push(`/testplans/${planId}`);
    };

    return (
        <div>
            <Header/>
            <div style={{ marginLeft: '20px', marginRight: '20px', color: 'grey'  }}>

                <h2 className={form.formHeader}>Create New Test Plan</h2>
                <div className={form.form}>
                    <form onSubmit={handleSubmit}>
                        <input
                            type="text"
                            value={name}
                            onChange={(e) => setName(e.target.value)}
                            placeholder="Name of test plan"
                            className={form.input}
                            required
                        />
                        <input
                            type="text"
                            value={description}
                            onChange={(e) => setDescription(e.target.value)}
                            placeholder="Description"
                            className={form.input}
                            required
                        />
                        <button type="submit" className={form.button}>
                        Submit
                        </button>
                    </form>

                </div>
            </div>

            <table className={table.table}>
                <thead>
                    <tr>
                        <th className={table.th}>ID</th>
                        <th className={table.th}>Name</th>
                        <th className={table.th}>Description</th>
                        <th className={table.th}>Tags</th>
                    </tr>
                </thead>
                <tbody>
                    {testPlans.map((plan) => (
                        <tr key={plan.id} className={table.td}
                            onClick={() => handleRowClick(plan.id)}
                            onMouseOver={() => setHoveredRow(plan.id)}
                            onMouseOut={() => setHoveredRow(null)}
                            style={{ backgroundColor: hoveredRow === plan.id ? '#e9e9e9' : 'transparent' }}>
                            <td className={table.td}>{plan.id}</td>
                            <td className={table.td}>{plan.name}</td>
                            <td className={table.td}>{plan.description}</td>
                            <td className={table.td}>
                                {plan.tags && Array.isArray(plan.tags) ? plan.tags.map(tag => tag).join(', ') : 'No Tags'}
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
    );
}

export default ManageTestPlansPage;
