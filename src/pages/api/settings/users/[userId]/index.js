import { createRouter } from 'next-connect';
import pool from '../../../../../lib/db';
const { adminAuthorization } = require('../../../../../lib/middleware/authorization');
const router = createRouter();

router
    .delete(async (req,res) => {
        const { userId } = req.query;
        try {
            const authorized = await adminAuthorization(req, res);
            if (!authorized) {
                res.status(401).json({ error: 'Not Authorized' });
                return;
            }
            if (!userId) {
                console.error('User ID is required');
                res.status(500).json({ error: 'Failed to delete user'});
            }
            console.log(userId);
            await pool.query('UPDATE users SET state = \'deleted\' WHERE id = $1', [userId]);
            res.json({ message: 'User deleted' });
        } catch (err) {
            console.err(err.stack);
            res.status(500);
        }
    });

export default router.handler({
    onError: (err, req, res) => {
        console.error(err.stack);
        res.status(500).json({ error: 'Something went wrong!' });
    },
    onNoMatch: (req, res) => {
        res.status(404).json({ error: 'Not Found' });
    }
});
