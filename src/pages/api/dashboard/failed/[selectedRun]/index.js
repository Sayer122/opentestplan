import { createRouter } from 'next-connect';
import pool from '../../../../../lib/db';

const router = createRouter();

router
    .get(async (req, res) => {
        const selectedRun = req.query.selectedRun;
        try {
            const result = await pool.query(`
        SELECT trs.id, tr.name, tr.version , tp.name as test_plan_name, ts.description as test_step_name, u.username , trs.comments ,trs.ticket ,trs.updated_at
        FROM test_run_steps trs
        JOIN test_runs tr ON trs.test_run_id = tr.id
        JOIN test_plans tp ON trs.test_plan_id = tp.id
        JOIN test_steps ts ON trs.test_step_id = ts.id
        JOIN users u ON trs.user_id = u.id

        WHERE trs.status = 'failed' and tr.id = $1
        ORDER BY trs.updated_at DESC
      `,[selectedRun]);
            res.json(result.rows);
        } catch (err) {
            console.error(err.stack);
            res.status(500).json({ error: 'Failed to fetch data' });
        }
    });

export default router.handler({
    onError: (err, req, res) => {
        console.error(err.stack);
        res.status(500).json({ error: 'Something went wrong!' });
    },
    onNoMatch: (req, res) => {
        res.status(404).json({ error: 'Not Found' });
    }
});
