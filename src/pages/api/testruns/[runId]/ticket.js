import { createRouter } from 'next-connect';
import pool from '../../../../lib/db';

const router = createRouter();

router.patch(async (req, res) => {
    const body = req.body;
    const client = await pool.connect();
    try {
        await client.query('BEGIN');

        await client.query(
            'UPDATE test_run_steps SET ticket = $1 WHERE id = $2',
            [body.ticketNumber, body.stepId]
        );

        await client.query('COMMIT');
        client.release();
        res.status(200).json({ message: 'Test run step ticket updated successfully' });

    } catch (err) {
        console.error(err.stack);
        await client.query('ROLLBACK');
        client.release();
        res.status(500).json({ error: 'Failed to update test step ticket' });
    }
});

export default router.handler({
    onError: (err, req, res) => {
        console.error(err.stack);
        res.status(500).json({ error: 'Something went wrong!' });
    },
    onNoMatch: (req, res) => {
        res.status(404).json({ error: 'Not Found' });
    }
});
